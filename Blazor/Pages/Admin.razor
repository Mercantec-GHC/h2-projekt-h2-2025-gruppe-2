@page "/admin"
@layout Blazor.Layout.MainLayout

<HeadContent>
	<!-- TailwindCSS (CDN for demo) -->
	<script src="https://cdn.tailwindcss.com"></script>
	<!-- AOS animations -->
	<link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
	<!-- Removed AOS / Feather / Chart.js scripts since JS file deleted -->
	<style>
		.chart-placeholder {
			display: flex;
			align-items: center;
			justify-content: center;
			height: 12rem; /* h-48 */
			font-size: 0.875rem; /* text-sm */
			color: #9ca3af; /* text-gray-400 */
			background-color: #f9fafb; /* bg-gray-50 */
			border: 1px dashed #d1d5db; /* border + border-gray-300 + dashed */
			border-radius: 0.5rem; /* rounded */
		}
	</style>
</HeadContent>

<div class="bg-gray-100 font-sans">
	<div class="flex flex-col h-screen overflow-hidden">
		<div class="flex-1 overflow-y-auto">

			<!-- Main Content -->
			<main class="p-6">
				<div class="mb-6">
					<h1 class="text-2xl font-bold text-gray-800">Dashboard Overview</h1>
					<p class="text-gray-600">Welcome back! Here's what's happening with your hotel today.</p>
				</div>

				<!-- Top Metrics (Snapshot + KPIs unified) -->
				<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-5 gap-4 mb-6">
					<div class="bg-white shadow rounded-lg p-5 flex flex-col justify-between">
						<div class="flex items-start justify-between mb-2">
							<p class="text-xs font-medium text-gray-500 uppercase tracking-wide">Bookings Today</p>
							<i data-feather="clipboard" class="text-indigo-500"></i>
						</div>
						<h3 class="text-3xl font-bold text-gray-800">@BookingsToday</h3>
						<p class="text-xs text-gray-400">New bookings created today</p>
					</div>
					<div class="bg-white shadow rounded-lg p-5 flex flex-col justify-between">
						<div class="flex items-start justify-between mb-2">
							<p class="text-xs font-medium text-gray-500 uppercase tracking-wide">Active Guests</p>
							<i data-feather="users" class="text-blue-500"></i>
						</div>
						<h3 class="text-3xl font-bold text-gray-800">@ActiveGuests</h3>
						<p class="text-xs text-gray-400">Adults + children in active bookings</p>
					</div>
					<div class="bg-white shadow rounded-lg p-5 flex flex-col justify-between">
						<div class="flex items-start justify-between mb-2">
							<p class="text-xs font-medium text-gray-500 uppercase tracking-wide">Revenue</p>
							<i data-feather="dollar-sign" class="text-green-500"></i>
						</div>
						<h3 class="text-2xl font-bold text-gray-800">@FormatCurrency(RevenueToday)</h3>
						<p class="text-xs text-gray-400">Today • <span class="font-semibold">@FormatCurrency(RevenueThisMonth)</span> this month</p>
					</div>
					<div class="bg-white shadow rounded-lg p-5 flex flex-col justify-between">
						<div class="flex items-start justify-between mb-2">
							<p class="text-xs font-medium text-gray-500 uppercase tracking-wide">Rooms</p>
							<i data-feather="home" class="text-purple-500"></i>
						</div>
						<h3 class="text-2xl font-bold text-gray-800">@RoomsOccupied / @RoomsAvailable</h3>
						<p class="text-xs text-gray-400">Occupied / Available</p>
					</div>
					<div class="bg-white shadow rounded-lg p-5 flex flex-col justify-between border-l-4 @(CleaningAlertCount > 0 ? "border-orange-400" : "border-green-400")">
						<div class="flex items-start justify-between mb-2">
							<p class="text-xs font-medium text-gray-500 uppercase tracking-wide">Cleaning Alerts</p>
							<i data-feather="alert-triangle" class="@(CleaningAlertCount > 0 ? "text-orange-500" : "text-green-500")"></i>
						</div>
						<h3 class="text-3xl font-bold @(CleaningAlertCount > 0 ? "text-orange-600" : "text-green-600")">@CleaningAlertCount</h3>
						<p class="text-xs text-gray-400">Rooms needing cleaning</p>
					</div>
				</div>

				<!-- Secondary KPIs -->
				<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-6 gap-4 mb-6">
					<button class="bg-white rounded-lg shadow p-6 text-left hover:ring-2 hover:ring-indigo-200" data-aos="fade-up" @onclick="SetFilterAll">
						<div class="flex items-center justify-between">
							<div>
								<p class="text-gray-500">Total Bookings</p>
								<h3 class="text-2xl font-bold">@(_bookingDetails?.TotalBookings ?? 0)</h3>
								<p class="text-gray-400 text-sm">Total active: @(_bookingDetails?.TotalActiveBookings ?? 0)</p>
							</div>
							<div class="bg-indigo-100 p-3 rounded-full">
								<i data-feather="calendar" class="text-indigo-600"></i>
							</div>
						</div>
					</button>
					<button class="bg-white rounded-lg shadow p-6 text-left hover:ring-2 hover:ring-indigo-200" data-aos="fade-up" data-aos-delay="50" @onclick="SetFilterActive">
						<div class="flex items-center justify-between">
							<div>
								<p class="text-gray-500">Booked Rooms</p>
								<h3 class="text-2xl font-bold">@(_bookingDetails?.TotalBookedRooms ?? 0)</h3>
								<p class="text-gray-400 text-sm">Active rooms: @(_bookingDetails?.TotalActiveBookedRooms ?? 0)</p>
							</div>
							<div class="bg-blue-100 p-3 rounded-full">
								<i data-feather="home" class="text-blue-600"></i>
							</div>
						</div>
					</button>
					<div class="bg-white rounded-lg shadow p-6" data-aos="fade-up" data-aos-delay="100">
						<div class="flex items-center justify-between">
							<div>
								<p class="text-gray-500">Revenue (sum)</p>
								<h3 class="text-2xl font-bold">@String.Format("{0:C}", _bookingDetails?.TotalBookingsPrice ?? 0)</h3>
								<p class="text-gray-400 text-sm">Avg: @String.Format("{0:C}", _bookingDetails?.AvgPrice ?? 0)</p>
							</div>
							<div class="bg-green-100 p-3 rounded-full">
								<i data-feather="dollar-sign" class="text-green-600"></i>
							</div>
						</div>
					</div>
					<button class="bg-white rounded-lg shadow p-6 text-left hover:ring-2 hover:ring-orange-200" data-aos="fade-up" data-aos-delay="150" @onclick="ShowUncleanRooms">
						<div class="flex items-center justify-between">
							<div>
								<p class="text-gray-500">Rooms (total)</p>
								<h3 class="text-2xl font-bold">@(_roomsDetails?.TotalRooms ?? 0)</h3>
								<p class="text-gray-400 text-sm">
									Clean: <span class="text-green-600 font-semibold">@(_roomsDetails?.TotalCleanRooms ?? 0)</span>
									<span class="mx-1">/</span>
									Unclean: <span class="text-orange-600 font-semibold">@((_roomsDetails?.TotalRooms ?? 0) - (_roomsDetails?.TotalCleanRooms ?? 0))</span>
								</p>
							</div>
							@if (_uncleanRooms?.Count > 0)
							{
								<div class="mb-4 p-4 rounded border bg-yellow-50 text-yellow-800">
									<span class="font-semibold">⚠ @_uncleanRooms.Count rooms need cleaning.</span>
									<button class="ml-2 text-sm underline" @onclick="ShowUncleanRooms">View list</button>
								</div>
							}
							<div class="bg-yellow-100 p-3 rounded-full">
								<i data-feather="archive" class="text-yellow-600"></i>
							</div>
						</div>
					</button>
					<div class="bg-white rounded-lg shadow p-6" data-aos="fade-up" data-aos-delay="200">
						<div class="flex items-center justify-between">
							<div>
								<p class="text-gray-500">Occupancy</p>
								<h3 class="text-2xl font-bold">@OccupancyPercent%</h3>
								<p class="text-gray-400 text-sm">@(_bookingDetails?.TotalActiveBookedRooms ?? 0) active rooms</p>
							</div>
							<div class="bg-indigo-100 p-3 rounded-full">
								<i data-feather="trending-up" class="text-indigo-600"></i>
							</div>
						</div>
					</div>
					<div class="bg-white rounded-lg shadow p-6" data-aos="fade-up" data-aos-delay="250">
						<div class="flex items-center justify-between">
							<div>
								<p class="text-gray-500">Active Accounts</p>
								<h3 class="text-2xl font-bold">@(_userDetails?.TotalAccounts ?? 0)</h3>
								<p class="text-gray-400 text-sm">Admins: @(_userDetails?.TotalAdmin ?? 0) • Staff: @((_userDetails?.TotalCleaningStaff ?? 0) + (_userDetails?.TotalReception ?? 0))</p>
							</div>
							<div class="bg-blue-100 p-3 rounded-full">
								<i data-feather="users" class="text-blue-600"></i>
							</div>
						</div>
					</div>
				</div>

				<!-- Charts and Recent Bookings -->
				<div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-6">
					<!-- Revenue Chart Placeholder -->
					<div class="bg-white rounded-lg shadow p-6 lg:col-span-2">
						<div class="flex items-center justify-between mb-4">
							<h3 class="font-semibold text-gray-800">Revenue Overview</h3>
							<span class="text-xs text-gray-400">(charts disabled)</span>
						</div>
						<div class="chart-placeholder">Chart removed (no JS). Add Blazor chart component later.</div>
					</div>

					<!-- Occupancy Rate Placeholder -->
					<div class="bg-white rounded-lg shadow p-6">
						<div class="flex items-center justify-between mb-4">
							<h3 class="font-semibold text-gray-800">Occupancy Rate</h3>
							<span class="text-xs text-gray-400">(charts disabled)</span>
						</div>
						<div class="chart-placeholder">Chart removed (no JS). Add Blazor chart component later.</div>
					</div>
				</div>

				<!-- Filters -->
				<div class="bg-white rounded-lg shadow p-4 mb-4">
					<div class="grid grid-cols-1 md:grid-cols-4 gap-4">
						<div>
							<label class="block text-xs text-gray-500 mb-1">Status</label>
							<select class="w-full border rounded px-2 py-1" @onchange="OnStatusChange">
								<option value="all">All</option>
								<option value="active">Booked</option>
								<option value="ended">Available</option>
							</select>
						</div>
						<div>
							<label class="block text-xs text-gray-500 mb-1">Guest/User ID</label>
							<input class="w-full border rounded px-2 py-1" placeholder="Search by user id" @bind="_filterUser" />
						</div>
						<div>
							<label class="block text-xs text-gray-500 mb-1">From</label>
							<input type="date" class="w-full border rounded px-2 py-1" @bind-value="_filterFrom" />
						</div>
						<div>
							<label class="block text-xs text-gray-500 mb-1">To</label>
							<input type="date" class="w-full border rounded px-2 py-1" @bind-value="_filterTo" />
						</div>
					</div>
				</div>

				<!-- Active Bookings -->
				<div class="bg-white rounded-lg shadow overflow-hidden">
					<div class="px-6 py-4 border-b border-gray-200">
						<h3 class="font-semibold text-gray-800">Active Bookings</h3>
					</div>
					<div class="overflow-x-auto">
						<table class="min-w-full divide-y divide-gray-200">
							<thead class="bg-gray-50">
								<tr>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Booking ID</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Guest</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Room</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Check-In</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Check-Out</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
									<th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Action</th>
								</tr>
							</thead>
							<tbody class="bg-white divide-y divide-gray-200">
								@if (_isLoading)
								{
									<tr>
										<td colspan="7" class="px-6 py-4 text-center text-gray-500">Loading...</td>
									</tr>
								}
								else if (_loadError is not null)
								{
									<tr>
										<td colspan="7" class="px-6 py-4 text-center text-red-600">@_loadError</td>
									</tr>
								}
								else if (_bookings?.Count == 0)
								{
									<tr>
										<td colspan="7" class="px-6 py-4 text-center text-gray-500">No bookings found</td>
									</tr>
								}
								else
								{
									@foreach (var b in FilteredBookings)
									{
										<tr>
											<td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">@b.Id</td>
											<td class="px-6 py-4 whitespace-nowrap">
												<div class="flex items-center">
													<div class="ml-1">
														<p class="text-sm font-medium text-gray-900">@b.UserId</p>
													</div>
												</div>
											</td>
											<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@b.BookingRooms?.Count</td>
											<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@b.OccupiedFrom.ToString("yyyy-MM-dd")</td>
											<td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">@b.OccupiedTill.ToString("yyyy-MM-dd")</td>
											<td class="px-6 py-4 whitespace-nowrap">
												@if (b.OccupiedTill > DateTime.UtcNow)
												{
													<span class="px-2 py-1 text-xs rounded-full bg-green-100 text-green-800">Active</span>
												}
												else
												{
													<span class="px-2 py-1 text-xs rounded-full bg-gray-100 text-gray-800">Ended</span>
												}
											</td>
											<td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
												<a href="#" class="text-indigo-600 hover:text-indigo-900">View</a>
											</td>
										</tr>
									}
								}
							</tbody>
						</table>
					</div>
					<div class="px-6 py-4 border-t border-gray-200 flex items-center justify-between">
						<div class="text-sm text-gray-500">
							Showing <span class="font-medium">1</span> to <span class="font-medium">4</span> of <span class="font-medium">24</span> results
						</div>
						<div class="flex space-x-2">
							<button class="px-3 py-1 rounded-md bg-gray-100 text-gray-700">Previous</button>
							<button class="px-3 py-1 rounded-md bg-indigo-600 text-white">1</button>
							<button class="px-3 py-1 rounded-md bg-gray-100 text-gray-700">2</button>
							<button class="px-3 py-1 rounded-md bg-gray-100 text-gray-700">3</button>
							<button class="px-3 py-1 rounded-md bg-gray-100 text-gray-700">Next</button>
						</div>
					</div>
				</div>
			</main>
		</div>
	</div>
</div>

@code {
	[Inject] private APIService Api { get; set; } = default!;
	[Inject] private StorageService Storage { get; set; } = default!;

	private bool _isLoading = true;
	private string? _loadError;
	private List<DomainModels.Booking>? _bookings = new();
	private DomainModels.BookingDetails? _bookingDetails;
	private DomainModels.TotalRoomsDetails? _roomsDetails;
	private DomainModels.UserDetails? _userDetails;
	private List<DomainModels.Room>? _uncleanRooms = new();
	private bool _showUncleanPanel = false;

	// Filters
	private string _statusFilter = "all"; // all | active | ended
	private string _filterUser = string.Empty;
	private DateTime? _filterFrom = null;
	private DateTime? _filterTo = null;

	private IEnumerable<DomainModels.Booking> FilteredBookings => (_bookings ?? new())
		.Where(b => _statusFilter == "all" || (_statusFilter == "active" ? b.OccupiedTill > DateTime.UtcNow : b.OccupiedTill <= DateTime.UtcNow))
		.Where(b => string.IsNullOrWhiteSpace(_filterUser) || (b.UserId?.Contains(_filterUser, StringComparison.OrdinalIgnoreCase) ?? false))
		.Where(b => !_filterFrom.HasValue || b.OccupiedFrom.Date >= _filterFrom.Value.Date)
		.Where(b => !_filterTo.HasValue || b.OccupiedTill.Date <= _filterTo.Value.Date)
		.OrderByDescending(b => b.OccupiedFrom);

	private int OccupancyPercent
	{
		get
		{
			var totalRooms = _roomsDetails?.TotalRooms ?? 0;
			if (totalRooms <= 0) return 0;
			var activeRooms = _bookingDetails?.TotalActiveBookedRooms ?? 0;
			var pct = (int)Math.Round(100.0 * activeRooms / totalRooms);
			return Math.Clamp(pct, 0, 100);
		}
	}

	// Snapshot computed metrics
	private int BookingsToday => (_bookings ?? new()).Count(b => SameDay(b.CreatedAt, DateTime.UtcNow));
	private int ActiveGuests => (_bookings ?? new())
		.Where(b => b.OccupiedTill > DateTime.UtcNow)
		.Sum(b => b.Adults + b.Children);
	private double RevenueToday => (_bookings ?? new())
		.Where(b => SameDay(b.CreatedAt, DateTime.UtcNow))
		.Sum(b => b.TotalPrice);
	private double RevenueThisMonth => (_bookings ?? new())
		.Where(b => b.CreatedAt.Year == DateTime.UtcNow.Year && b.CreatedAt.Month == DateTime.UtcNow.Month)
		.Sum(b => b.TotalPrice);
	private int RoomsOccupied => _bookingDetails?.TotalActiveBookedRooms ?? 0;
	private int RoomsAvailable => (_roomsDetails?.TotalRooms ?? 0) - RoomsOccupied;
	private int CleaningAlertCount => _uncleanRooms?.Count ?? 0;

	private static bool SameDay(DateTime a, DateTime b) => a.Date == b.Date;
	private static string FormatCurrency(double value) => string.Format(System.Globalization.CultureInfo.CurrentCulture, "{0:C0}", value);

	protected override async Task OnInitializedAsync()
	{
		_isLoading = true;
		_loadError = null;
		try
		{
			var jwt = await Storage.GetItemFromLocalStorageAsync("authToken");

			// Parallel fetch
			var bookingsTask = Api.GetAllBookingsAsync();
			Task<DomainModels.BookingDetails?> bookingDetailsTask = jwt is null
				? Task.FromResult<DomainModels.BookingDetails?>(null)
				: Api.GetBookingDetailsAsync(jwt);
			Task<DomainModels.TotalRoomsDetails?> roomsDetailsTask = jwt is null
				? Task.FromResult<DomainModels.TotalRoomsDetails?>(null)
				: Api.GetRoomsDetailsAsync(jwt);
			Task<DomainModels.UserDetails?> userDetailsTask = jwt is null
				? Task.FromResult<DomainModels.UserDetails?>(null)
				: Api.GetUserDetailsAsync(jwt);
			Task<List<DomainModels.Room>> uncleanRoomsTask = jwt is null
				? Task.FromResult(new List<DomainModels.Room>())
				: Api.GetUncleanRoomsAsync(jwt);

			await Task.WhenAll(bookingsTask, bookingDetailsTask, roomsDetailsTask, userDetailsTask, uncleanRoomsTask);
			_bookings = bookingsTask.Result;
			_bookingDetails = bookingDetailsTask.Result;
			_roomsDetails = roomsDetailsTask.Result;
			_userDetails = userDetailsTask.Result;
			_uncleanRooms = uncleanRoomsTask.Result;
		}
		catch (Exception ex)
		{
			_loadError = ex.Message;
		}
		finally
		{
			_isLoading = false;
		}
	}


	private void OnStatusChange(ChangeEventArgs e)
	{
		_statusFilter = e.Value?.ToString() ?? "all";
	}

	private void SetFilterAll()
	{
		_statusFilter = "all";
	}

	private void SetFilterActive()
	{
		_statusFilter = "active";
	}

	private void ShowUncleanRooms()
	{
		_showUncleanPanel = true;
	}
}

