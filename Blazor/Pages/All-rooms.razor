@page "/all-rooms"
@using System.Text.Json
@using DomainModels
@using Blazor.Services
@inject StorageService Storage
@inject APIService API

<h3 class="mb-3">Rooms</h3>

@if (error is not null)
{
    <div class="alert alert-danger">@error</div>
}
else if (loading)
{
    <div class="text-muted">Counting all your available rooms!...</div>
}
else if (rooms.Count == 0)
{
    <div class="alert alert-info">No rooms found D:</div>
}
else
{
    <div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-3">
        @foreach (var r in rooms)
        {
            <div class="col">
                <RoomCard room="r"></RoomCard>
            </div>
        }
    </div>
}

@code {
    List<Room> rooms = new();
    bool loading = true;
    string? error;
    const string CACHE_KEY = "cachedRooms";
    TimeSpan CACHE_DURATION = TimeSpan.FromMinutes(10) + TimeSpan.FromHours(2); // Example

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var cacheRooms = await Storage.GetCacheObjectFromLocalStorageAsync<List<Room>>(CACHE_KEY);
            if (cacheRooms != null && cacheRooms.Expiry > DateTime.UtcNow)
            {
                Console.WriteLine("Using cached rooms");
                rooms = cacheRooms.Data;
                return;
            }
            
            rooms = await API.GetRooms();
            await Storage.SaveCacheObjectToLocalStorageAsync(CACHE_KEY, rooms, CACHE_DURATION);
        }
        catch (Exception ex)
        {
            error = "Failed: " + ex.Message;
        }
        finally
        {
            loading = false;
        }
    }

}