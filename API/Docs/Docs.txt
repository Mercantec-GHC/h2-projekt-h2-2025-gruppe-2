EF core power tools
dotnet tool install --global dotnet-ef
dotnet ef migrations add init-user
dotnet ef database update

Migrations guide:
Make class -> Add model builder entity to DBContext -> dotnet ef migrations add [MESSAGE] -> dotnet ef database update
 -> Add scaffolding item... -> API controller with EF core
 
UserId got added to BookingRooms table. Hypo: Since we ran the migrations with users, bookings and rooms before
we added the BookingRooms table, it might have fucked with the structure.
After testing, UserId was still there.
There was a navigation value in the User class that was not suppose to be there.

JWT tomfuckery: First of all, the code that Mathias gave out did not work, because he accidentally made two of the
same values, which turned the JWT values into arrays.
Then, because we said "app.Authentication" AFTER "app.Authorization," it did not work, because it is Authenticate,
AND THEN authorization. The program says fucking nothing about this btw.

If you change the roles authorization of a method, a hot reload is not enough.

Setup logging to a file:
Download the nuget packages "Serilog.AspNetCore" and "Serilog.Sinks.File".
Setup configuration in the Program.cs file.
        Log.Logger = new LoggerConfiguration()
            .WriteTo.File("Logs/log.txt", rollingInterval: RollingInterval.Day)
            .CreateLogger();

        builder.Host.UseSerilog();
Then, in a controller/service, add:
    private readonly ILogger<UsersController> _logger;
    
    public UsersController(ILogger<UsersController> logger) 
    {
    	_logger = logger;
    }
    
    public async Task<ActionResult<User>> GetUser(string id)
    {
        _logger.LogInformation($"Getting user with user id: {id}");
        var user = await _context.Users.FindAsync(id);

        if (user == null)
        {
            _logger.LogError($"User with id '{id}' was not found.");
            return NotFound();
        }

        return user;
    }
    
10/09:
The appsettings.json needs to be in the wwwroot for WebAssembly.

Friday ToDos:
Make sure that dev is equal to main at the end of the day.
Delete all unused branches.

11/09:
Generel error handling: A message is sent, as well as a response. If the response is empty/null, an error has happened.

07-10:
There are two bookings that occ